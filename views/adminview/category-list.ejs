<section class="content-main">
  <div class="d-flex justify-content-between">
    <div class="content-header">
      <h2 class="content-title">Categories</h2>
    </div>

    <div class=" mb-5">
      <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#exampleModal">Add
        Category</button>
    </div>
  </div>

  <!-- Modal -->
  <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel">Add Category</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form class="mx-1 mx-md-4" action="" id="catForm" method="post">

            <div class="mb-4">
              <label for="product_category" class="form-label">Category</label>
              <input type="text" placeholder="Category Name" onkeyup="return validateName()" required name="category"
                class="form-control" id="catName">
              <span id="category-error" class="validation" style="color: rgb(255, 0, 0)"></span>
            </div>


            <div class="d-flex justify-content-center mx-4 mb-3 mb-lg-4">
              <input type="submit" value="Add Category" required onclick="addCat()" style="border-radius: 1rem;"
                class="btn btn-primary btn-lg" />
              <span style="color: red;" id="submit-error"></span>
            </div>


          </form>
        </div>
      </div>
    </div>
  </div>


  <div class="card mb-4">
    <!-- card-header end -->
    <div class="card-body">
      <div class="table-responsive">
        <table class="table table-hover" id="productsTable">
          <thead>
            <tr>
              <th>Category Name</th>
              <th class="text-end">Action</th>
            </tr>
          </thead>
          <tbody>

            <% category.forEach(cat=>{ %>
              <tr>
                <td>
                  <%= cat.category%>
                </td>

                <td class="text-end">
                  <button class="btn btn-dark btn-sm" style="border-radius: 1rem;"
                    onclick="editCategory('<%= cat._id%>');event.preventDefault()">Edit</button>

                  <% if ( cat.status ) { %>

                    <a href="#" class="btn btn-danger  btn-sm" style="width: 60px; border-radius: 1rem;"
                      onclick="unlistCategory('<%=cat._id%>'); event.preventDefault();">Unlist</a>

                    <% } else { %>

                      <a href="#" class="btn btn-success btn-sm" style="width: 60px;border-radius: 1rem;"
                        onclick="listCategory('<%=cat._id%>'); event.preventDefault();">List</a>

                      <% } %>

                </td>
              </tr>
              <% } )%>

          </tbody>
        </table>
      </div>
    </div>
  </div>
</section>


<script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.js"></script>
<script>
  $(document).ready(function () {
    $('#productsTable').DataTable();
  });
</script>



<script>



  const nameError = document.getElementById("category-error");
  const submitError = document.getElementById("submit-error");


  function validateName() {
    var name = document.getElementById('catName').value;
    if (name.length == 0) {
      nameError.innerHTML = "This field is required";
      return false;
    }

    if (!name.match(/^[A-Z][a-z]+$/)) {
      nameError.innerHTML = "First letter must be capital";
      return false;
    }
    nameError.innerHTML = "";
    return true;
  }

  function validateForm() {
    if (!validateName()) {
      submitError.style.display = "flex";
      submitError.style.justifyContent = "center";
      submitError.innerHTML = "Enter details properly";
      setTimeout(() => {
        submitError.style.display = "none";
      }, 3000);
      return false;
    }
  }

  function editCategory(id) {
    Swal.fire({
      title: "Edit Category",
      input: "text",
      showCancelButton: true,
      confirmButtonText: "Save Changes",
      cancelButtonText: "Cancel",
      timer: 10000
    }).then((result) => {
      if (result.isConfirmed) {
        $.ajax({
          url: `/admin/edit-category/${id}`,
          method: "POST", // change the method to POST
          data: { name: result.value }, // include the edited category name in the request body
          success: (response) => {
            location.reload()
            console.log("Category edited");
          },
        })
      } else {
        error: (error) => {
          console.log(`Error: ${error}`);
        }
      }
    }
    )
  }

  function unlistCategory(id) {
    Swal.fire({
      title: "Unlist Category",
      text: `Do you want to unlist this product?`,
      showCancelButton: true,
      confirmButtonText: "Unlist",
      cancelButtonText: "Cancel",
      timer: 5000
    }).then((result) => {
      if (result.isConfirmed) {
        $.ajax({
          url: `/admin/unlist-category/${id}`,
          method: "get",
          success: (response) => {
            location.reload();
            console.log(" Category Unlisted");
          },
          error: (error) => {
            console.log(`Error: ${error}`);
          },
        });
      }
    });
  }

  function listCategory(id) {
    Swal.fire({
      title: "List Category",
      text: `Do you want to list this category?`,
      showCancelButton: true,
      confirmButtonText: "List",
      cancelButtonText: "Cancel",
      timer: 5000
    }).then((result) => {
      if (result.isConfirmed) {
        $.ajax({
          url: `/admin/list-category/${id}`,
          method: "get",
          success: (response) => {
            location.reload();
            console.log("Category Listed");
          },
          error: (error) => {
            console.log(`Error: ${error}`);
          },
        });
      }
    });
  }

  function addCat() {
    var name = document.getElementById('catName').value;
    if (name.length == 0) {
      nameError.innerHTML = "This field is required";

    } else {
      $.ajax({
        url: `/admin/category-list`,
        method: "POST",
        data: $('#catForm').serialize(),
        success: (response) => {
          if (response.failed) {
            Swal.fire({
              title: 'Category Already Exist',
              text: 'Failed',
              timer: 10000,
              showConfirmButton: false
            })
            console.log("Category Added");
            location.reload()
          } else {
            Swal.fire({
              title: 'Category Added',
              text: 'Success',
              timer: 10000,
              showConfirmButton: false
            })
            location.reload()
            console.log(response, 'messsage');
          }

        }
      })
    }

  }

</script>